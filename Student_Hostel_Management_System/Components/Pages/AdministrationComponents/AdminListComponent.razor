@page "/AdminList"
@using Student_Hostel_Management_System.Data.Entites
@using Student_Hostel_Management_System.Services.Interfaces
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject IAdminstrationDataService AdminDataSevice
@inject IStudentsDataService StudentsDataService 
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@using Syncfusion.Blazor.Layouts


<h3>Admin List</h3>

<MudTable Items="Administrations" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
    <ToolBarContent>
        <MudSpacer />

        <MudButton Color="Color.Primary"
        OnClick="AddAdministrationAsync"
        Variant="Variant.Filled"
        StartIcon="@Icons.Material.Filled.Add">
            إضافة مدير
        </MudButton>

    </ToolBarContent>
    <HeaderContent>
        @* <MudTh>المعرف الشخصي</MudTh> *@
        <MudTh>الرقم الوظيفي</MudTh>
        <MudTh>رقم النزل</MudTh>
        <MudTh>الإسم</MudTh>
        <MudTh>الهاتف</MudTh>
        <MudTh>البريد</MudTh>
        <MudTh>الوصف</MudTh>
        <MudTh>العمليات</MudTh>
    </HeaderContent>
    <RowTemplate>
        @* <MudTd DataLabel="Id">@context.Id</MudTd> *@
        <MudTd DataLabel="NID">@context.NID</MudTd>
        <MudTd DataLabel="HostelNO">@context.HostelNo</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Phone">@context.Phone</MudTd>
        <MudTd DataLabel="Email">@context.Email</MudTd>
        <MudTd DataLabel="Description">@context.Description</MudTd>
        <MudTd>
            <MudButton Color="Color.Primary"
                       OnClick="() => EditAdministrationAsync(context.Id)"
                        Variant="Variant.Filled"
                        StartIcon="@Icons.Material.Filled.Edit" />

            <MudButton Color="Color.Error"
                OnClick="() => DeleteAdministration(context)"
                Variant="Variant.Filled"
                StartIcon="@Icons.Material.Filled.Delete" />
        </MudTd>
    </RowTemplate>
</MudTable>

@code {

    private List<Admin> Administrations { get; set; } = new List<Admin>();
    private bool _loading;

    protected override async Task OnInitializedAsync()
    {
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomCenter;

        _loading = true;
        // await Task.Delay(500); لتجربة التحميل
        Administrations = await AdminDataSevice.GetAll();
        _loading = false;
    }

    private async Task AddAdministrationAsync()
    {
        var options = new DialogOptions
            {
                MaxWidth = MaxWidth.Medium, // أو Small, Large, ExtraLarge
                FullWidth = true,           // ليأخذ العرض الكامل المتاح داخل MaxWidth
                CloseOnEscapeKey = true
            };
        await DialogService.ShowAsync<OperationsOnAdmin>("إضافة مدير", options);
        Administrations = await AdminDataSevice.GetAll();
        StateHasChanged();
    }

    private async Task EditAdministrationAsync(Guid adminId)
    {
        var parameters = new DialogParameters { ["Id"] = adminId.ToString() };

        var options = new DialogOptions
            {
                MaxWidth = MaxWidth.Medium,
                FullWidth = true,
                CloseOnEscapeKey = true
            };

        var dialog = await DialogService.ShowAsync<OperationsOnAdmin>("تعديل طالب", parameters, options);
        var result = await dialog.Result;

        if (result is { Canceled: false })
        {
            // تم حفظ التعديلات داخل الـ Dialog — نعيد تحميل القائمة
            Administrations = await AdminDataSevice.GetAll();
            StateHasChanged(); // لكي يتم تحديث الجدول في الواجهة
        }
    }

    private async Task DeleteAdministration(Admin admin)
    {
		_loading = true;
		await AdminDataSevice.DeleteById(admin.Id);
		Snackbar.Add("تم الحذف بنجاح", Severity.Success);

		// Refresh the list after deletion
		Administrations = await AdminDataSevice.GetAll();
		_loading = false;
    }
}